import type { Metadata } from "next";
import Error from "@/components/common/error";
import { apiUrl } from "utils/urlConfig";
import MangaPage from "@/components/MangaPage";
import Loading from "./loading";

export async function generateMetadata({
  params,
}: {
  params: { name: string };
}): Promise<Metadata> {
  const data = await getMangaByGenre(params.name);

  // if (!data?.mangas) return notFound();

  return {
    title: `Read ${
      params.name.charAt(0).toUpperCase() + params.name.slice(1)
    } Online Free`,
    description: "Generated by create next app",
  };
}

async function getMangaByGenre(name: string) {
  const res = await fetch(`${apiUrl}/manga/genre/${name}?page=1`);
  // The return value is *not* serialized
  // You can return Date, Map, Set, etc.

  // Recommendation: handle errors
  if (!res.ok) {
    // This will activate the closest `error.js` Error Boundary
    return undefined;
  }

  return res.json();
}

export default async function Page({ params }: { params: { name: string } }) {
  const name = params.name;
  const data = await getMangaByGenre(name);
  const genreName = name.charAt(0).toUpperCase() + name.slice(1);
  if (!data) {
    return <Error />;
  }

  return (
    <div className="py-[20px]">
      <MangaPage
        mangas={data}
        genreName={genreName}
        type="Genre"
        searchPage={false}
      />
    </div>
  );
}
